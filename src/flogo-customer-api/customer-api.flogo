{
  "imports": [
    "github.com/project-flogo/flow",
    "github.com/project-flogo/contrib/activity/noop",
    "github.com/tibco/flogo-general/src/app/General/activity/log",
    "github.com/tibco/wi-postgres/src/app/PostgreSQL/activity/query",
    "github.com/tibco/flogo-general/src/app/General/activity/mapper",
    "github.com/project-flogo/contrib/activity/actreturn",
    "github.com/tibco/flogo-general/src/app/General/trigger/rest",
    "github.com/project-flogo/contrib/function/coerce",
    "github.com/project-flogo/contrib/function/string",
    "github.com/project-flogo/contrib/function/array",
    "github.com/tibco/wi-postgres/src/app/PostgreSQL/connector/connection"
  ],
  "name": "customer-api",
  "description": "Customer API",
  "version": "1.0.0",
  "type": "flogo:app",
  "appModel": "1.1.1",
  "tags": [],
  "triggers": [
    {
      "ref": "#rest",
      "name": "tibco-wi-rest",
      "description": "Simple REST Trigger",
      "settings": {
        "port": 9999,
        "APISpecUpdate": true,
        "swagger": {
          "filename": "openapi3_0.json",
          "content": "data:application/json;base64,"
        },
        "swaggerVersion": "v3",
        "apiVersion": "1.0.0",
        "secureConnection": false,
        "serverKey": "",
        "caCertificate": ""
      },
      "id": "CustomerAPI",
      "handlers": [
        {
          "description": "Returns a customer object by Id",
          "settings": {
            "APISpecPath": "/customer/{id}",
            "Method": "GET",
            "reqType": "application/json",
            "Path": "/customer/{id}",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:getCustomerById"
            },
            "input": {
              "pathParams": "=$.pathParams"
            },
            "output": {
              "code": "=$.code",
              "responseBody": "=$.responseBody"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": true,
            "message": ""
          },
          "schemas": {
            "reply": {
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "feSchemaMap": {}
              },
              "responseCodesSchema": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"number\"},\"responseType\":{\"type\":\"string\"},\"responseSchema\":{\"type\":\"string\"}},\"required\":[\"code\",\"responseType\"]}}",
                "fe_metadata": "[{\"code\":200,\"responseType\":\"object\",\"responseSchema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"identifier\\\",\\\"example\\\":1},\\\"name\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"name\\\",\\\"example\\\":\\\"John Doe\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"email\\\",\\\"example\\\":\\\"john.doe@example.com\\\"},\\\"age\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"age\\\",\\\"example\\\":30},\\\"city\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"city\\\",\\\"example\\\":\\\"New York\\\"}}}\"},{\"code\":404,\"responseType\":\"string\"}]",
                "feSchemaMap": {}
              }
            },
            "output": {
              "pathParams": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}},\"required\":[\"id\"]}",
                "fe_metadata": "[{\"parameterName\":\"id\",\"type\":\"number\",\"required\":true}]"
              },
              "multipartFormData": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{}}",
                "feSchemaMap": {}
              },
              "multipartForm": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{}}",
                "fe_metadata": "[]",
                "feSchemaMap": {}
              }
            }
          },
          "name": "getCustomerById"
        },
        {
          "description": "Create a customer object",
          "settings": {
            "APISpecPath": "/customer",
            "Method": "POST",
            "reqType": "application/json",
            "Path": "/customer",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:createCustomer"
            },
            "input": {
              "body": "=$.body"
            },
            "output": {
              "code": "=$.code",
              "responseBody": "=$.responseBody"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": true,
            "message": ""
          },
          "schemas": {
            "reply": {
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "feSchemaMap": {}
              },
              "responseCodesSchema": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"number\"},\"responseType\":{\"type\":\"string\"},\"responseSchema\":{\"type\":\"string\"}}}}",
                "fe_metadata": "[{\"code\":201,\"responseType\":\"object\",\"responseSchema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"identifier\\\",\\\"example\\\":1},\\\"name\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"name\\\",\\\"example\\\":\\\"John Doe\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"email\\\",\\\"example\\\":\\\"john.doe@example.com\\\"},\\\"age\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"age\\\",\\\"example\\\":30},\\\"city\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"city\\\",\\\"example\\\":\\\"New York\\\"}}}\"}]",
                "feSchemaMap": {}
              }
            },
            "output": {
              "body": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"identifier\",\"example\":1},\"name\":{\"type\":\"string\",\"description\":\"name\",\"example\":\"John Doe\"},\"email\":{\"type\":\"string\",\"description\":\"email\",\"example\":\"john.doe@example.com\"},\"age\":{\"type\":\"integer\",\"description\":\"age\",\"example\":30},\"city\":{\"type\":\"string\",\"description\":\"city\",\"example\":\"New York\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"identifier\",\"example\":1},\"name\":{\"type\":\"string\",\"description\":\"name\",\"example\":\"John Doe\"},\"email\":{\"type\":\"string\",\"description\":\"email\",\"example\":\"john.doe@example.com\"},\"age\":{\"type\":\"integer\",\"description\":\"age\",\"example\":30},\"city\":{\"type\":\"string\",\"description\":\"city\",\"example\":\"New York\"}}}",
                "feSchemaMap": {}
              },
              "multipartFormData": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{}}",
                "feSchemaMap": {}
              },
              "multipartForm": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{}}",
                "fe_metadata": "[]",
                "feSchemaMap": {}
              }
            }
          },
          "name": "createCustomer"
        }
      ]
    }
  ],
  "resources": [
    {
      "id": "flow:getCustomerById",
      "data": {
        "name": "getCustomerById",
        "description": "Returns a customer object by Id",
        "links": [
          {
            "id": 1,
            "from": "StartActivity",
            "to": "LogMessage",
            "type": "label",
            "label": "StartActivity to LogMessage"
          },
          {
            "id": 2,
            "from": "LogMessage",
            "to": "FetchCustomerRow",
            "type": "label",
            "label": "LogMessage to PostgreSQLQuery"
          },
          {
            "id": 3,
            "from": "FetchCustomerRow",
            "to": "MapperCustomer",
            "type": "expression",
            "label": "FetchCustomerRow to Mapper",
            "value": "array.count($activity[FetchCustomerRow].Output.records) > 0\r\n"
          },
          {
            "id": 4,
            "from": "MapperCustomer",
            "to": "Return200",
            "type": "label",
            "label": "MapperCustomer to Return"
          },
          {
            "id": 5,
            "from": "FetchCustomerRow",
            "to": "LogMessageWarnNotFound",
            "type": "exprOtherwise",
            "label": "FetchCustomerRow to LogMessage1"
          },
          {
            "id": 6,
            "from": "LogMessageWarnNotFound",
            "to": "Return404",
            "type": "label",
            "label": "LogMessageWarnNotFound to Return1"
          }
        ],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          },
          {
            "id": "LogMessage",
            "name": "LogMessage",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": true,
                "message": "=string.concat('Retrieving customer object for id: ',coerce.toString($flow.pathParams.id))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "FetchCustomerRow",
            "name": "FetchCustomerRow",
            "description": "This activity executes query on a PostgreSQL database",
            "settings": {
              "retryOnError": {
                "count": 0,
                "interval": 0
              }
            },
            "activity": {
              "ref": "#query",
              "input": {
                "Connection": "conn://2cfd2a40-4a4e-4fd0-a8ec-c3a644ec82bb",
                "QueryName": "",
                "Schema": "public",
                "Query": "SELECT * FROM customer WHERE id=?id;",
                "manualmode": false,
                "Fields": [
                  {
                    "FieldName": "id",
                    "Type": "INTEGER",
                    "Selected": true,
                    "Parameter": true,
                    "isEditable": false
                  },
                  {
                    "FieldName": "name",
                    "Type": "VARCHAR",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  },
                  {
                    "FieldName": "email",
                    "Type": "VARCHAR",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  },
                  {
                    "FieldName": "age",
                    "Type": "INTEGER",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  },
                  {
                    "FieldName": "city",
                    "Type": "VARCHAR",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  }
                ],
                "RuntimeQuery": "",
                "State": "1ccae101-9a2c-4f8f-97ad-552ce00a1bc1SELECT * FROM customer WHERE id=?id;",
                "input": {
                  "mapping": {
                    "parameters": {
                      "id": "=coerce.toInt($flow.pathParams.id)"
                    }
                  }
                }
              },
              "schemas": {
                "input": {
                  "input": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"}}}}}",
                    "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"}}}}}",
                    "feSchemaMap": {}
                  }
                },
                "output": {
                  "Output": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"},\"city\":{\"type\":\"string\"}}}}}}",
                    "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"},\"city\":{\"type\":\"string\"}}}}}}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "MapperCustomer",
            "name": "MapperCustomer",
            "description": "Mapper Activity",
            "activity": {
              "ref": "#mapper",
              "input": {
                "input": {
                  "mapping": {
                    "id": "=$activity[FetchCustomerRow].Output.records[0].id",
                    "name": "=$activity[FetchCustomerRow].Output.records[0].name",
                    "email": "=$activity[FetchCustomerRow].Output.records[0].email",
                    "age": "=$activity[FetchCustomerRow].Output.records[0].age",
                    "city": "=$activity[FetchCustomerRow].Output.records[0].city"
                  }
                }
              },
              "schemas": {
                "input": {
                  "input": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"age\":{\"type\":\"number\"},\"city\":{\"type\":\"string\"}}}",
                    "fe_metadata": "{\r\n  \"id\": 1,\r\n  \"name\": \"John Doe\",\r\n  \"email\": \"john.doe@example.com\",\r\n  \"age\": 30,\r\n  \"city\": \"New York\"\r\n}\r\n",
                    "feSchemaMap": {}
                  }
                },
                "output": {
                  "output": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"age\":{\"type\":\"number\"},\"city\":{\"type\":\"string\"}}}",
                    "fe_metadata": "{\n  \"id\": 1,\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"age\": 30,\n  \"city\": \"New York\"\n}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "Return200",
            "name": "Return200",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 200,
                  "responseBody": {
                    "mapping": {
                      "body": "=$activity[MapperCustomer].output"
                    }
                  }
                }
              }
            }
          },
          {
            "id": "LogMessageWarnNotFound",
            "name": "LogMessageWarnNotFound",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "WARN",
                "flowInfo": false,
                "message": "=string.concat('No records returned for customer id: ',coerce.toString($flow.pathParams.id))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "Return404",
            "name": "Return404",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 404,
                  "responseBody": {
                    "mapping": {
                      "body": ""
                    }
                  }
                }
              }
            }
          }
        ],
        "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEyLCJ5IjoxMDF9LCJMb2dNZXNzYWdlIjp7IngiOjEzNiwieSI6OTF9LCJGZXRjaEN1c3RvbWVyUm93Ijp7IngiOjMzNywieSI6OTV9LCJNYXBwZXJDdXN0b21lciI6eyJ4Ijo1NDksInkiOjk0fSwiUmV0dXJuMjAwIjp7IngiOjczMSwieSI6OTV9LCJMb2dNZXNzYWdlV2Fybk5vdEZvdW5kIjp7IngiOjU0OCwieSI6MjIwfSwiUmV0dXJuNDA0Ijp7IngiOjczMiwieSI6MjIwfX0=",
        "metadata": {
          "input": [
            {
              "name": "pathParams",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"id\":{\"type\":\"string\"}}"
              }
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "responseBody",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}"
              }
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"CustomerAPI\",\"properties\":{\"pathParams\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[]},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    },
    {
      "id": "flow:createCustomer",
      "data": {
        "name": "createCustomer",
        "description": "Create a customer object",
        "links": [],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          }
        ],
        "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfX0=",
        "metadata": {
          "input": [
            {
              "name": "body",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"id\":{\"type\":\"integer\",\"description\":\"identifier\",\"example\":1},\"name\":{\"type\":\"string\",\"description\":\"name\",\"example\":\"John Doe\"},\"email\":{\"type\":\"string\",\"description\":\"email\",\"example\":\"john.doe@example.com\"},\"age\":{\"type\":\"integer\",\"description\":\"age\",\"example\":30},\"city\":{\"type\":\"string\",\"description\":\"city\",\"example\":\"New York\"}}"
              }
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "responseBody",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}"
              }
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"body\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"identifier\",\"example\":1},\"name\":{\"type\":\"string\",\"description\":\"name\",\"example\":\"John Doe\"},\"email\":{\"type\":\"string\",\"description\":\"email\",\"example\":\"john.doe@example.com\"},\"age\":{\"type\":\"integer\",\"description\":\"age\",\"example\":30},\"city\":{\"type\":\"string\",\"description\":\"city\",\"example\":\"New York\"}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    }
  ],
  "properties": [
    {
      "name": "PostgreSQL.postgres.Host",
      "type": "string",
      "value": "ep-mute-fire-a9qqz3hw-pooler.gwc.azure.neon.tech"
    },
    {
      "name": "PostgreSQL.postgres.Port",
      "type": "float64",
      "value": 5432
    },
    {
      "name": "PostgreSQL.postgres.Database_Name",
      "type": "string",
      "value": "neondb"
    },
    {
      "name": "PostgreSQL.postgres.User",
      "type": "string",
      "value": "neondb_owner"
    },
    {
      "name": "PostgreSQL.postgres.Password",
      "type": "string",
      "value": "SECRET:iogpf+kg8V75pv88OZ8cnLBA9jLns+B/bDxFeVhslkA="
    },
    {
      "name": "PostgreSQL.postgres.Maximum_Open_Connections",
      "type": "float64",
      "value": 0
    },
    {
      "name": "PostgreSQL.postgres.Maximum_Idle_Connections",
      "type": "float64",
      "value": 2
    },
    {
      "name": "PostgreSQL.postgres.Maximum_Connection_Lifetime",
      "type": "string",
      "value": 0
    },
    {
      "name": "PostgreSQL.postgres.Maximum_Connection_Retry_Attempts",
      "type": "float64",
      "value": 3
    },
    {
      "name": "PostgreSQL.postgres.Connection_Retry_Delay",
      "type": "float64",
      "value": 5
    },
    {
      "name": "PostgreSQL.postgres.Connection_Timeout",
      "type": "float64",
      "value": 20
    },
    {
      "name": "PostgreSQL.postgres.CA_Certificate",
      "type": "string",
      "value": {
        "filename": "ISRG_Root_X1.pem",
        "content": "data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      }
    },
    {
      "name": "PostgreSQL.postgres.Client_Certificate",
      "type": "string",
      "value": ""
    },
    {
      "name": "PostgreSQL.postgres.Client_Key",
      "type": "string",
      "value": ""
    }
  ],
  "connections": {
    "2cfd2a40-4a4e-4fd0-a8ec-c3a644ec82bb": {
      "id": "2cfd2a40-4a4e-4fd0-a8ec-c3a644ec82bb",
      "name": "postgres",
      "ref": "#connection",
      "isGlobal": false,
      "settings": {
        "databaseType": "PostgreSQL",
        "name": "postgres",
        "description": "postgres",
        "host": "=$property[\"PostgreSQL.postgres.Host\"]",
        "port": "=$property[\"PostgreSQL.postgres.Port\"]",
        "databaseName": "=$property[\"PostgreSQL.postgres.Database_Name\"]",
        "user": "=$property[\"PostgreSQL.postgres.User\"]",
        "password": "=$property[\"PostgreSQL.postgres.Password\"]",
        "maxopenconnection": "=$property[\"PostgreSQL.postgres.Maximum_Open_Connections\"]",
        "maxidleconnection": "=$property[\"PostgreSQL.postgres.Maximum_Idle_Connections\"]",
        "connmaxlifetime": "=$property[\"PostgreSQL.postgres.Maximum_Connection_Lifetime\"]",
        "maxconnectattempts": "=$property[\"PostgreSQL.postgres.Maximum_Connection_Retry_Attempts\"]",
        "connectionretrydelay": "=$property[\"PostgreSQL.postgres.Connection_Retry_Delay\"]",
        "connectiontimeout": "=$property[\"PostgreSQL.postgres.Connection_Timeout\"]",
        "onprem": false,
        "tlsconfig": true,
        "tlsparam": "VerifyCA",
        "cacert": "=$property[\"PostgreSQL.postgres.CA_Certificate\"]",
        "clientcert": "=$property[\"PostgreSQL.postgres.Client_Certificate\"]",
        "clientkey": "=$property[\"PostgreSQL.postgres.Client_Key\"]"
      }
    }
  },
  "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS90aWJjby9mbG9nby1nZW5lcmFsL3NyYy9hcHAvR2VuZXJhbCIsImlkIjoiR2VuZXJhbCIsInZlcnNpb24iOiIxLjYuMyIsInRhZyI6IjEuNi4zLWIwMSIsIm5hbWUiOiJHZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwiLCJpc1VzZXJFeHRlbnNpb24iOmZhbHNlfSx7InJlZiI6ImdpdGh1Yi5jb20vdGliY28vd2ktcG9zdGdyZXMvc3JjL2FwcC9Qb3N0Z3JlU1FMIiwiaWQiOiJQb3N0Z3JlU1FMIiwidmVyc2lvbiI6IjIuNy4xIiwidGFnIjoiMi43LjEtYjAxIiwibmFtZSI6IlBvc3RncmVTUUwiLCJzM2xvY2F0aW9uIjoiVGliY28vUG9zdGdyZVNRTCIsImlzVXNlckV4dGVuc2lvbiI6ZmFsc2V9XQ==",
  "metadata": {
    "endpoints": [
      {
        "protocol": "http",
        "port": "9999",
        "spec": {
          "name": "customer-api",
          "version": "1.0.0"
        },
        "title": "CustomerAPI",
        "swagger": {
          "openapi": "3.0.0",
          "info": {
            "title": "customer-api",
            "version": "1.0.0",
            "description": "Simple REST Trigger"
          },
          "paths": {
            "/customer/{id}": {
              "get": {
                "summary": "getCustomerById",
                "operationId": "get_customer_id",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "description": "Request parameter",
                    "required": true,
                    "schema": {
                      "type": "number"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/schema1"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "",
                    "content": {
                      "text/plain": {
                        "schema": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Returns a customer object by Id"
              }
            },
            "/customer": {
              "post": {
                "summary": "createCustomer",
                "operationId": "post_customer",
                "parameters": [],
                "responses": {
                  "201": {
                    "description": "",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/schema1"
                        }
                      }
                    }
                  }
                },
                "description": "Create a customer object",
                "requestBody": {
                  "description": "",
                  "required": false,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/schema1"
                      }
                    }
                  }
                }
              }
            }
          },
          "components": {
            "schemas": {
              "schema1": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "email",
                    "example": "john.doe@example.com"
                  },
                  "age": {
                    "type": "integer",
                    "description": "age",
                    "example": 30
                  },
                  "city": {
                    "type": "string",
                    "description": "city",
                    "example": "New York"
                  }
                }
              }
            }
          }
        }
      }
    ],
    "flogoVersion": "2.25.2"
  }
}